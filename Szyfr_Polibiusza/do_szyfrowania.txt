In this chapter we will be covering implementation of the OpenFlow switch (v1.0) and important hardware and software OpenFlow switches. Then we will introduce Mininet as an integrated environment to experience with the OpenFlow switches and controllers. The reference implementation of OpenFlow and hardware/software products will be presented in this chapter. An OpenFlow laboratory using Mininet network emulation is explained along with a step-by-step experiment in Mininet. OpenFlow reference switch OpenFlow switch is a basic forwarding element, which is accessible via OpenFlow protocol and interface. Although at first glance this setup would appear to simplify the switching hardware, flow-based SDN architectures such as OpenFlow may require additional forwarding table entries, buffer space, and statistical counters that are not very easy to implement in traditional switches with application specific ICs (ASICs). In an OpenFlow network, switches come in two flavors, hybrid (OpenFlow enabled) and pure (OpenFlow only). Hybrid switches support OpenFlow in addition to traditional operation and protocols (L2/L3 switching). Pure OpenFlow switches have no legacy features or onboard control, and completely rely on a controller for forwarding decisions. Most of the currently available and commercial switches are hybrids. Since OpenFlow switches are controlled by an open interface (over TCP-based TLS session), it is important that this link remains available and secure. The OpenFlow protocol can be viewed as one possible implementation of SDN-based controller-switch interactions (which is a messaging protocol), as it defines the communication between the OpenFlow switch and an OpenFlow controller. Implementing the OpenFlow Switch [ 24 ] The reference implementation of the OpenFlow switch from Stanford University includes ofdatapath, which implements the flow table in user space; ofprotocol, a program that implements the secure channel component of the reference switch; and dpctl, which is a tool for configuring the switch. This distribution includes some additional software as well (for instance, controller, a simple controller program that connects to any number of OpenFlow switches and a Wireshark dissector that can decode the OpenFlow protocol). The following figure depicts the OpenFlow reference switch, interface, and three message types (controller-toswitch, asynchronous, and symmetric) and sub-types. These messages were briefly introduced in the previous chapter. They are presented with more implementation related details in this section. Controller-to-switch messages are initiated by the controller and may or may not require a response from the OpenFlow switch. OpenFlow 1.3.0 provides optional support for encrypted TLS communication and a certificate exchange between the OpenFlow switches/controller(s). However, the exact implementation and certificate format is not currently specified. Furthermore, fine-grained security options regarding scenarios with multiple OpenFlow controllers are out of the scope of the current OpenFlow specification. There is no method specified to only grant partial access permissions to an authorized OpenFlow controller. Also note that in this book we strictly stick to OpenFlow 1.0.0 specification. The reference OpenFlow 1.0.0 implementation can be downloaded from: www.openflow.org/ wp/downloads/
